server:
  port: 8080

spring:
  config:
    import: optional:env[.env]

  datasource:
    url: jdbc:mysql://localhost:3306/dream_decoder?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: localhost
      port: 6379
      stream:
        key: dream:save:jobs
        group: dream-savers
        consumer-prefix: consumer-
  cache:
    type: none

#  sql:
#    init:
#      mode: always

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        show_sql: true
        use_sql_comments: true
    open-in-view: false

local-cache:
  initial-capacity: 256
  maximum-size: 2000
  expire-after-write: 30m

logging:
  level:
    org.hibernate.type.descriptor.sql: trace
    com.example: debug

openai:
  api-key: ${OPENAI_API_KEY}
  api-url: ${OPENAI_API_URL}
  model: ${OPENAI_MODEL}

jwt:
  secret: ${JWT_SECRET}
  expiration: 3600000

concurrency:
  permits: 200 # AI 요청 동시 처리 허용량 --> gpt-5-nano 기준 500RPM, 100000TPM을 고려한 수치(최대의 80%정도로 설정)
  duplicate-request-lock:
    key-prefix: "lock:ai-chat:user:"
    ttl: 3s
  semaphore:
    key: "semaphore:ai-chat"
    wait-time-seconds: 5

embedding:
  server:
    url: http://embedding-server:8000
